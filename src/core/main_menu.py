import flet as ft

from src.core.configs import config, program_name, program_version, date_of_program_change

async def actions_with_the_program_window(page: ft.Page):
    """–ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º—ã."""
    page.title = f"–í–µ—Ä—Å–∏—è {program_version}. –î–∞—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è {date_of_program_change}"
    page.window.width = config.WINDOW_WIDTH
    page.window.height = config.WINDOW_HEIGHT
    page.window.resizable = False  # –ó–∞–ø—Ä–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
    page.window.min_width = config.WINDOW_WIDTH  # –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —à–∏—Ä–∏–Ω–∞
    page.window.max_width = config.WINDOW_WIDTH  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —à–∏—Ä–∏–Ω–∞
    page.window.min_height = config.WINDOW_HEIGHT  # –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –≤—ã—Å–æ—Ç–∞
    page.window.max_height = config.WINDOW_HEIGHT  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –≤—ã—Å–æ—Ç–∞



class MainMenu:
    """–ö–ª–∞—Å—Å –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é."""

    def __init__(self, page: ft.Page, info_list: ft.ListView):
        self.page = page  # —Å—Ç—Ä–∞–Ω–∏—Ü–∞
        self.info_list = info_list  # ListView –¥–ª—è –≤—ã–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞

    def create_title(self, text: str, font_size: int = config.TITLE_FONT_SIZE) -> ft.Text:
        """–°–æ–∑–¥–∞–µ—Ç –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å –≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–º."""
        return ft.Text(
            spans=[
                ft.TextSpan(
                    text,
                    ft.TextStyle(
                        size=font_size,
                        weight=config.TITLE_FONT_WEIGHT,
                        foreground=ft.Paint(
                            gradient=ft.PaintLinearGradient(
                                (0, 20), (150, 20), [config.PRIMARY_COLOR, config.PRIMARY_COLOR]
                            )), ), ), ], )

    def create_buttons(self) -> list:
        """–°–æ–∑–¥–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é."""
        return [
            ft.OutlinedButton(text="üìã –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–∞–Ω–∞–ª–æ–≤",
                              on_click=lambda _: self.page.go("/getting_list_channels"),
                              width=config.BUTTON_WIDTH, height=config.BUTTON_HEIGHT,
                              style=ft.ButtonStyle(shape=ft.RoundedRectangleBorder(radius=config.RADIUS), ),
                              ),
            ft.OutlinedButton(text="üí¨ –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤",
                              on_click=lambda _: self.page.go("/submitting_comments"),
                              width=config.BUTTON_WIDTH, height=config.BUTTON_HEIGHT,
                              style=ft.ButtonStyle(shape=ft.RoundedRectangleBorder(radius=config.RADIUS), ),
                              ),
            ft.OutlinedButton(text="üñºÔ∏è –°–º–µ–Ω–∞ –∏–º–µ–Ω–∏, –æ–ø–∏—Å–∞–Ω–∏—è, —Ñ–æ—Ç–æ",
                              on_click=lambda _: self.page.go("/change_name_description_photo"),
                              width=config.BUTTON_WIDTH, height=config.BUTTON_HEIGHT,
                              style=ft.ButtonStyle(shape=ft.RoundedRectangleBorder(radius=config.RADIUS), ),
                              ),
            ft.OutlinedButton(text="üîó –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª—ã",
                              on_click=lambda _: self.page.go("/channel_subscription"),
                              width=config.BUTTON_WIDTH, height=config.BUTTON_HEIGHT,
                              style=ft.ButtonStyle(shape=ft.RoundedRectangleBorder(radius=config.RADIUS), ),
                              ),
            ft.OutlinedButton(text="üìÇ –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–∞–Ω–∞–ª–æ–≤",
                              on_click=lambda _: self.page.go("/creating_list_of_channels"),
                              width=config.BUTTON_WIDTH, height=config.BUTTON_HEIGHT,
                              style=ft.ButtonStyle(shape=ft.RoundedRectangleBorder(radius=config.RADIUS), ),
                              ),
            ft.OutlinedButton(text="üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è",
                              on_click=lambda _: self.page.go("/documentation"),
                              width=config.BUTTON_WIDTH, height=config.BUTTON_HEIGHT,
                              style=ft.ButtonStyle(shape=ft.RoundedRectangleBorder(radius=config.RADIUS), ),
                              ),
        ]

    def build(self) -> ft.Column:
        """–°–æ–∑–¥–∞–µ—Ç –∫–æ–ª–æ–Ω–∫—É —Å –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏ –∏ –∫–Ω–æ–ø–∫–∞–º–∏."""
        title = self.create_title(text=program_name, font_size=19)
        version = self.create_title(text=f"–í–µ—Ä—Å–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã: {program_version}", font_size=13)
        date_program_change = self.create_title(text=f"–î–∞—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è: {date_of_program_change}", font_size=13)
        buttons = self.create_buttons()
        return ft.Column(
            [title, version, date_program_change, *buttons],
            alignment=ft.MainAxisAlignment.START,
            spacing=config.SPACING,
        )
