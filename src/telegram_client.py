# -*- coding: utf-8 -*-
import os
from loguru import logger
from telethon import TelegramClient

from src import db_handler
from src.config_handler import api_id, api_hash
from src.connect import reading_proxy_data_from_the_database


def find_files(directory_path: str, extension: str) -> list:
    """
    –ü–æ–∏—Å–∫ —Ñ–∞–π–ª–æ–≤ —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏. –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —É–∫–∞–∑–∞–Ω–æ –±–µ–∑ —Ç–æ—á–∫–∏.

    :param directory_path: –ü—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    :param extension: –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ (—É–∫–∞–∑–∞–Ω–Ω–æ–µ –±–µ–∑ —Ç–æ—á–∫–∏)
    :return list: –°–ø–∏—Å–æ–∫ –∏–º–µ–Ω –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    """
    entities = []  # –°–ø–∏—Å–æ–∫ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–º–µ–Ω –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    try:
        for file_name in os.listdir(directory_path):
            if file_name.endswith(f".{extension}"):  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –ª–∏ –∏–º—è —Ñ–∞–π–ª–∞ –Ω–∞ –∑–∞–¥–∞–Ω–Ω–æ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ
                file_path = os.path.join(directory_path, file_name)  # –ü–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É
                entities.append(file_path)  # –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –≤ —Å–ø–∏—Å–æ–∫

        logger.info(f"üîç –ù–∞–π–¥–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã: {entities}")  # –í—ã–≤–æ–¥–∏–º –∏–º–µ–Ω–∞ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
        return entities  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø—É—Ç–µ–π –∫ —Ñ–∞–π–ª–∞–º
    except FileNotFoundError:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞! –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è {directory_path} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        return []  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫, –µ—Å–ª–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞


async def connect_telegram_account() -> TelegramClient:
    """
    –ü–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –∫ Telegram –∞–∫–∫–∞—É–Ω—Ç—É, –∏—Å–ø–æ–ª—å–∑—É—è api_id –∏ api_hash.

    :return: TelegramClient –æ–±—ä–µ–∫—Ç, –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–π –∫ Telegram.
    :raises: Exception, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∏ –∫ –æ–¥–Ω–æ–º—É –∞–∫–∫–∞—É–Ω—Ç—É.
    """
    session_files = find_files(directory_path="data/accounts/", extension='session')
    if not session_files:
        raise Exception("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ —Å–µ—Å—Å–∏–∏ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ data/accounts/.")

    for session_file in session_files:
        client = TelegramClient(
            session=session_file,  # –ü–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å–µ—Å—Å–∏–∏
            api_id=api_id,  # –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä API Telegram
            api_hash=api_hash,  # –ö–ª—é—á API Telegram
            system_version="4.16.30-vxCUSTOM",
            proxy=await reading_proxy_data_from_the_database(db_handler)

        )
        logger.info(f'–ü–æ–ø—ã—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ {session_file}')
        try:
            await client.connect()  # –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            if await client.is_user_authorized():
                logger.info(f'‚úÖ –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ {session_file}')
                return client
            else:
                logger.warning(f'‚ùå –ê–∫–∫–∞—É–Ω—Ç {session_file} –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω.')
                await client.disconnect()  # ` –ï—Å–ª–∏ –∞–∫–∫–∞—É–Ω—Ç –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –≤—ã—Ö–æ–¥–∏–º
        except Exception as e:
            logger.error(f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ {session_file}: {e}')
            if client.is_connected():
                await client.disconnect()  # –ï—Å–ª–∏ –∞–∫–∫–∞—É–Ω—Ç –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –≤—ã—Ö–æ–¥–∏–º

    # –ï—Å–ª–∏ –Ω–∏ –æ–¥–∏–Ω –∞–∫–∫–∞—É–Ω—Ç –Ω–µ –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è, –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏–µ
    raise Exception("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∏ –∫ –æ–¥–Ω–æ–º—É –∞–∫–∫–∞—É–Ω—Ç—É.")
