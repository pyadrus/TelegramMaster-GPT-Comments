# -*- coding: utf-8 -*-
import flet as ft
from faker import Faker
from loguru import logger
from telethon import functions

from src.core.buttons import create_buttons
from src.core.views import program_title, view_with_elements_input_field
from src.telegram_client import connect_telegram_account


async def handle_change_name_description_photo(page: ft.Page):
    """–°–æ–∑–¥–∞–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É üñºÔ∏è –°–º–µ–Ω–∞ –∏–º–µ–Ω–∏, –æ–ø–∏—Å–∞–Ω–∏—è"""

    logger.info("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–µ—Ä–µ—à–µ–ª –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –°–º–µ–Ω–∞ –∏–º–µ–Ω–∏, –æ–ø–∏—Å–∞–Ω–∏—è")
    page.views.clear()  # –û—á–∏—â–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π View
    lv = ft.ListView(expand=10, spacing=1, padding=2, auto_scroll=True)
    page.controls.append(lv)  # –¥–æ–±–∞–≤–ª—è–µ–º ListView –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏

    lv.controls.append(
        ft.Text(
            "üñºÔ∏è –°–º–µ–Ω–∞ –∏–º–µ–Ω–∏ –∏ –æ–ø–∏—Å–∞–Ω–∏—è\n\n"
            "üîπ –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∏–º—è –ø—Ä–æ—Ñ–∏–ª—è –∏ –æ–ø–∏—Å–∞–Ω–∏–µ.\n"
            "üîπ –ò–º—è –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ —Å –ø–æ–º–æ—â—å—é Faker.\n"
            "üîπ –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –≤ –ø–æ–ª–µ –Ω–∏–∂–µ –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–°–º–µ–Ω–∞ –∏–º–µ–Ω–∏, –æ–ø–∏—Å–∞–Ω–∏—è'.\n\n"
            "üìå –ß—Ç–æ –±—É–¥–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–æ?\n"
            "‚úÖ –ò–º—è (–±—É–¥–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ —Å–ª—É—á–∞–π–Ω–æ–µ)\n"
            "‚úÖ –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è (—Ç–æ, —á—Ç–æ –≤—ã –≤–≤–µ–¥–µ—Ç–µ)\n\n"
            "‚ö†Ô∏è –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ: Telegram –º–æ–∂–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞—Ç—å —á–∞—Å—Ç–æ—Ç—É —Å–º–µ–Ω—ã –∏–º–µ–Ω–∏ –∏ –æ–ø–∏—Å–∞–Ω–∏—è."
        )
    )

    about_field = ft.TextField(label="–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è", multiline=True, max_lines=19)

    async def action_1(_):
        try:
            lv.controls.append(ft.Text("üñºÔ∏è –°–º–µ–Ω–∞ –∏–º–µ–Ω–∏, –æ–ø–∏—Å–∞–Ω–∏—è"))  # –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ ListView
            page.update()  # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
            client = await connect_telegram_account()
            await change_profile_descriptions(client, lv, about_field.value)
            page.update()  # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
        except Exception as e:
            logger.error(e)
            lv.controls.append(ft.Text(f"–û—à–∏–±–∫–∞: {str(e)}"))  # –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –æ—à–∏–±–∫—É –≤ ListView
            page.update()  # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É

    await view_with_elements_input_field(page=page,
                                         title=await program_title(title="üñºÔ∏è –°–º–µ–Ω–∞ –∏–º–µ–Ω–∏, –æ–ø–∏—Å–∞–Ω–∏—è"),
                                         buttons=[
                                             await create_buttons(text="üñºÔ∏è –°–º–µ–Ω–∞ –∏–º–µ–Ω–∏, –æ–ø–∏—Å–∞–Ω–∏—è",
                                                                  on_click=action_1),
                                             await create_buttons(text="–ù–∞–∑–∞–¥", on_click=lambda _: page.go("/"))
                                         ],
                                         route_page="change_name_description_photo",
                                         lv=lv,
                                         text_field=about_field  # –°–æ–∑–¥–∞–µ–º TextField –ø–æ–ª–µ –≤–≤–æ–¥–∞
                                         )
    page.update()  # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É


async def change_profile_descriptions(client, lv: ft.ListView, about) -> None:
    """
    –û–±–Ω–æ–≤–ª—è–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è Telegram –∏ –∏–º—è —Å–æ —Å–ª—É—á–∞–π–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ —Å –ø–æ–º–æ—â—å—é –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ Faker.

    :param client: TelegramClient –æ–±—ä–µ–∫—Ç.
    :param lv: ListView –æ–±—ä–µ–∫—Ç.
    :param about: –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è.
    :return: None
    """
    fake = Faker('ru_RU')  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ª–æ–∫–∞–ª—å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ä—É—Å—Å–∫–∏—Ö –∏–º–µ–Ω
    fake_name = fake.first_name_female()  # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∂–µ–Ω—Å–∫–æ–µ –∏–º—è
    lv.controls.append(ft.Text(f"üé≠ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏–º—è: {fake_name}"))  # –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ ListView

    # –í–≤–æ–¥–∏–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ–ª–µ–≥–∏
    async with client:  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä
        # –û–±–Ω–æ–≤–ª—è–µ–º –∏–º—è –∏ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è
        result = await client(
            functions.account.UpdateProfileRequest(
                first_name=fake_name,  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤–æ–µ –∏–º—è
                about=about  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
            )
        )
        logger.info(result)

        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_info = (
            f"üÜî ID: {result.id}\n"
            f"üë§ –ò–º—è: {result.first_name}\n"
            f"üë• –§–∞–º–∏–ª–∏—è: {result.last_name}\n"
            f"üìõ Username: {result.username}\n"
            f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {result.phone}\n"
            f"üìù –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–æ: {about}"
        )

        # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ ListView
        lv.controls.append(ft.Text(user_info))
        lv.controls.append(ft.Text("‚úÖ –ü—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!"))  # –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ ListView
