import flet as ft
from loguru import logger

from src.core.configs import config
from src.core.getting_list_channels import ApplicationGettingListChannels
from src.core.logging_in import loging
from src.core.main_menu import MainMenu, actions_with_the_program_window

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logger.add("user_data/log/log.log", rotation="1 MB", compression="zip")


class Application:
    """–ö–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º."""

    def __init__(self):
        self.page = None

    async def setup(self, page: ft.Page):
        """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É."""
        self.page = page

        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–≤–µ—Ç–ª–æ–π —Ç–µ–º—ã
        self.page.theme_mode = ft.ThemeMode.LIGHT

        # –ü—Ä–∏–≤—è–∑–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –º–∞—Ä—à—Ä—É—Ç–æ–≤
        self.page.on_route_change = self.route_change

        await loging()

        await actions_with_the_program_window(page)

        # –ü–æ–ª–µ –¥–ª—è –≤—ã–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        self.info_list = ft.ListView(expand=True, spacing=10, padding=config.PADDING, auto_scroll=True)

        # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ ListView
        self.info_list.controls.append(
            ft.Text(
                "TelegramMaster Commentator üöÄ\n\nTelegramMaster Commentator - —ç—Ç–æ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Ä–∞—Å—Å—Ç–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –≤ –∫–∞–Ω–∞–ª–∞—Ö Telegram, –∞ —Ç–∞–∫–∂–µ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏. üí¨\n\n"
                "üìÇ –ü—Ä–æ–µ–∫—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ GitHub: https://github.com/pyadrus/TelegramMaster_Commentator \n"
                "üì≤ –ö–æ–Ω—Ç–∞–∫—Ç —Å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º –≤ Telegram: https://t.me/PyAdminRU\n"
                f"üì° –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–∞ –∫–∞–Ω–∞–ª–µ: https://t.me/master_tg_d"
            )
        )

        # –°–æ–∑–¥–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        self.menu = MainMenu(page, self.info_list).build()

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –º–∞—Ä—à—Ä—É—Ç–∞
        await self.route_change(None)

    async def route_change(self, route):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –º–∞—Ä—à—Ä—É—Ç–∞."""
        self.page.views.clear()

        # –û—Å–Ω–æ–≤–Ω–æ–π –º–∞–∫–µ—Ç (–±–æ–∫–æ–≤–æ–µ –º–µ–Ω—é –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å)
        layout = ft.Row(
            [
                ft.Container(self.menu, width=config.PROGRAM_MENU_WIDTH, padding=config.PADDING),
                ft.Container(width=config.LINE_WIDTH, bgcolor=config.LINE_COLOR),  # –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–∞—è –ª–∏–Ω–∏—è
                ft.Container(self.info_list, expand=True, padding=config.PADDING),
            ],
            alignment=ft.MainAxisAlignment.START,
            spacing=0,  # –£–±–∏—Ä–∞–µ–º –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫ –º–µ–∂–¥—É —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏
            expand=True,
        )

        # –î–æ–±–∞–≤–ª—è–µ–º –º–∞–∫–µ—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
        self.page.views.append(ft.View("/", [layout]))

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –º–∞—Ä—à—Ä—É—Ç–æ–≤
        if self.page.route == "/getting_list_channels":  # üìã –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–∞–Ω–∞–ª–æ–≤
            logger.info("–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–∞–Ω–∞–ª–æ–≤")
            app_getting_list = ApplicationGettingListChannels()
            await app_getting_list.setup(self.page)
        elif self.page.route == "/submitting_comments":  # üí¨ –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
            logger.info("–û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤")
        elif self.page.route == "/change_name_description_photo":  # üñºÔ∏è –°–º–µ–Ω–∞ –∏–º–µ–Ω–∏, –æ–ø–∏—Å–∞–Ω–∏—è, —Ñ–æ—Ç–æ
            logger.info("–°–º–µ–Ω–∞ –∏–º–µ–Ω–∏, –æ–ø–∏—Å–∞–Ω–∏—è, —Ñ–æ—Ç–æ")
        elif self.page.route == "/channel_subscription":  # üîó –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª—ã
            logger.info("–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª—ã")
        elif self.page.route == "/creating_list_of_channels":  # üìÇ –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–∞–Ω–∞–ª–æ–≤
            logger.info("–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–∞–Ω–∞–ª–æ–≤")
        elif self.page.route == "/documentation":  # üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
            logger.info("–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è")

        elif self.page.route == "/errors":
            # –ü—É—Å—Ç–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ–º
            logger.info("–û—à–∏–±–∫–∞")
        self.page.update()

    async def main(self, page: ft.Page):
        """–¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ."""
        await self.setup(page)


if __name__ == "__main__":
    app = Application()
    ft.app(target=app.main)
