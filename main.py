import flet as ft
from loguru import logger
from src.core.configs import program_version, date_of_program_change, program_name
from src.core.logging_in import loging
from src.gui.app import action_1_with_log, action_2_with_log, action_3, action_4, action_5

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logger.add("user_data/log/log.log", rotation="1 MB", compression="zip")


class AppConfig:
    """–ö–ª–∞—Å—Å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."""

    # –†–∞–∑–º–µ—Ä—ã –æ–∫–Ω–∞
    WINDOW_WIDTH = 850# —à–∏—Ä–∏–Ω–∞ –æ–∫–Ω–∞
    WINDOW_HEIGHT = 600# –≤—ã—Å–æ—Ç–∞ –æ–∫–Ω–∞

    # –†–∞–∑–º–µ—Ä—ã –∫–Ω–æ–ø–æ–∫
    BUTTON_WIDTH = 700
    BUTTON_HEIGHT = 60

    # –û—Ç—Å—Ç—É–ø—ã –∏ padding
    PADDING = 20
    SPACING = 15

    # –¶–≤–µ—Ç–∞
    PRIMARY_COLOR = ft.colors.RED
    SECONDARY_COLOR = ft.colors.BLACK

    # –°—Ç–∏–ª–∏ —Ç–µ–∫—Å—Ç–∞
    TITLE_FONT_SIZE = 13
    TITLE_FONT_WEIGHT = ft.FontWeight.BOLD

    # –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–∞—è –ª–∏–Ω–∏—è
    LINE_WIDTH = 2
    LINE_COLOR = ft.colors.BLACK

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
config = AppConfig()


class MainMenu:
    """–ö–ª–∞—Å—Å –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é."""

    def __init__(self, page: ft.Page, info_list: ft.ListView):
        self.page = page  # —Å—Ç—Ä–∞–Ω–∏—Ü–∞
        self.info_list = info_list  # ListView –¥–ª—è –≤—ã–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞

    def create_title(self, text: str, font_size: int = config.TITLE_FONT_SIZE) -> ft.Text:
        """–°–æ–∑–¥–∞–µ—Ç –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å –≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–º."""
        return ft.Text(
            spans=[
                ft.TextSpan(
                    text,
                    ft.TextStyle(
                        size=font_size,
                        weight=config.TITLE_FONT_WEIGHT,
                        foreground=ft.Paint(
                            gradient=ft.PaintLinearGradient(
                                (0, 20), (150, 20), [config.PRIMARY_COLOR, config.PRIMARY_COLOR]
                            )
                        ),
                    ),
                ),
            ],
        )

    def create_buttons(self) -> list:
        """–°–æ–∑–¥–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é."""
        return [
            ft.OutlinedButton(
                text="–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–∞–Ω–∞–ª–æ–≤",
                on_click=lambda _: action_1_with_log(self.page, self.info_list),
                width=config.BUTTON_WIDTH,
                height=config.BUTTON_HEIGHT,
                style=ft.ButtonStyle(
                    shape=ft.RoundedRectangleBorder(radius=10),
                ),
            ),
            ft.OutlinedButton(
                text="–û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤",
                on_click=lambda _: action_2_with_log(self.page, self.info_list),
                width=config.BUTTON_WIDTH,
                height=config.BUTTON_HEIGHT,
                style=ft.ButtonStyle(
                    shape=ft.RoundedRectangleBorder(radius=10),
                ),
            ),
            ft.OutlinedButton(
                text="–°–º–µ–Ω–∞ –∏–º–µ–Ω–∏, –æ–ø–∏—Å–∞–Ω–∏—è, —Ñ–æ—Ç–æ",
                on_click=lambda _: action_3(self.page, self.info_list),
                width=config.BUTTON_WIDTH,
                height=config.BUTTON_HEIGHT,
                style=ft.ButtonStyle(
                    shape=ft.RoundedRectangleBorder(radius=10),
                ),
            ),
            ft.OutlinedButton(
                text="–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª—ã",
                on_click=lambda _: action_4(self.page, self.info_list),
                width=config.BUTTON_WIDTH,
                height=config.BUTTON_HEIGHT,
                style=ft.ButtonStyle(
                    shape=ft.RoundedRectangleBorder(radius=10),
                ),
            ),
            ft.OutlinedButton(
                text="–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–∞–Ω–∞–ª–æ–≤",
                on_click=lambda _: action_5(self.page, self.info_list),
                width=config.BUTTON_WIDTH,
                height=config.BUTTON_HEIGHT,
                style=ft.ButtonStyle(
                    shape=ft.RoundedRectangleBorder(radius=10),
                ),
            ),
        ]

    def build(self) -> ft.Column:
        """–°–æ–∑–¥–∞–µ—Ç –∫–æ–ª–æ–Ω–∫—É —Å –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏ –∏ –∫–Ω–æ–ø–∫–∞–º–∏."""
        title = self.create_title(program_name)
        version = self.create_title(program_version)
        buttons = self.create_buttons()
        return ft.Column(
            [title, version, *buttons],
            alignment=ft.MainAxisAlignment.START,
            spacing=config.SPACING,
        )


class Application:
    """–ö–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º."""

    def __init__(self):
        self.page = None

    async def setup(self, page: ft.Page):
        """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É."""
        self.page = page
        await loging()

        page.title = f"–í–µ—Ä—Å–∏—è {program_version}. –î–∞—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è {date_of_program_change}"
        page.window.width = config.WINDOW_WIDTH
        page.window.height = config.WINDOW_HEIGHT
        page.window.resizable = False  # –ó–∞–ø—Ä–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
        page.window.min_width = config.WINDOW_WIDTH  # –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —à–∏—Ä–∏–Ω–∞
        page.window.max_width = config.WINDOW_WIDTH  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —à–∏—Ä–∏–Ω–∞
        page.window.min_height = config.WINDOW_HEIGHT  # –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –≤—ã—Å–æ—Ç–∞
        page.window.max_height = config.WINDOW_HEIGHT  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –≤—ã—Å–æ—Ç–∞

        # –ü–æ–ª–µ –¥–ª—è –≤—ã–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        info_list = ft.ListView(expand=True, spacing=10, padding=config.PADDING, auto_scroll=True)

        # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ ListView
        info_list.controls.append(ft.Text(
            "TelegramMaster Commentator üöÄ\n\nTelegramMaster Commentator üöÄ - —ç—Ç–æ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Ä–∞—Å—Å—Ç–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –≤ –∫–∞–Ω–∞–ª–∞—Ö Telegram, –∞ —Ç–∞–∫–∂–µ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏.üí¨\n\n"
            "–ü—Ä–æ–µ–∫—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ GitHub: https://github.com/pyadrus/TelegramMaster_Commentator üìÇ\n\n"
            "–ö–æ–Ω—Ç–∞–∫—Ç —Å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º –≤ Telegram: https://t.me/PyAdminRU üì≤\n\n"
            "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–∞ –∫–∞–Ω–∞–ª–µ: https://t.me/master_tg_d üì°", ))

        # –°–æ–∑–¥–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        menu = MainMenu(page, info_list).build()

        layout = ft.Row(
            [
                ft.Container(menu, width=300, padding=config.PADDING),
                ft.Container(width=config.LINE_WIDTH, bgcolor=config.LINE_COLOR),  # –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–∞—è –ª–∏–Ω–∏—è
                ft.Container(info_list, expand=True, padding=config.PADDING),
            ],
            alignment=ft.MainAxisAlignment.START,
            spacing=0,  # –£–±–∏—Ä–∞–µ–º –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫ –º–µ–∂–¥—É —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏
            expand=True,
        )

        # –î–æ–±–∞–≤–ª—è–µ–º –º–∞–∫–µ—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
        page.add(layout)
        page.update()

    async def main(self, page: ft.Page):
        """–¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ."""
        await self.setup(page)


if __name__ == "__main__":
    app = Application()
    ft.app(target=app.main)
